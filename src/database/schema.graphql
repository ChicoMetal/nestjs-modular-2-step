scalar DateTime

interface BaseModel {
  id: ID!
  createAt: DateTime!
  updateAt: DateTime
  deleteAt: DateTime
}

type CommonAttributes {
  name: String
  description: String
}

type BaseModelAttributes {
  id: ID!
  createAt: DateTime!
  updateAt: DateTime
  deleteAt: DateTime
}

type Product implements BaseModel {
  id: ID!
  createAt: DateTime!
  updateAt: DateTime
  deleteAt: DateTime

  name: String
  description: String
  price: Int
  stock: Int
  image: String
}

input ProductCreateInput {
  name: String!
  description: String!
  price: Int!
  stock: Int!
  image: String!
}

input ProductUpdateInput {
  name: String
  description: String
  price: Int
  stock: Int
  image: String
}


type Brand implements BaseModel {
  id: ID!
  createAt: DateTime!
  updateAt: DateTime
  deleteAt: DateTime

  name: String
  description: String
  image: String
}

input BrandCreateInput {
  name: String!
  description: String!
  image: String!
}

input BrandUpdateInput {
  name: String
  description: String
  image: String
}

type Category implements BaseModel {
  id: ID!
  createAt: DateTime!
  updateAt: DateTime
  deleteAt: DateTime

  name: String
  description: String
}

input CategoryCreateInput {
  name: String!
  description: String!
}

input CategoryUpdateInput {
  name: String
  description: String
}

# type Mutation {
#   createProduct(data: ProductCreateInput): Product!
#   createBrand(data: BrandCreateInput): Brand!
#   createCategory(data: CategoryCreateInput): Category!
# }

type Query {
  products: [Product]!
  product(id: ID!): Product
  categories: [Category]!
  category(id: ID!): Category
  brands: [Brand]!
  brand(id: ID!): Brand!,
  testList(elements: [Int!]!): [Int]!
}

type Mutation {
  addProduct(data: ProductCreateInput!): Product
  updateProduct(id: ID!, data: ProductUpdateInput!): Product
  deleteProduct(id: ID!): ID
  addBrand(data: BrandCreateInput!): Brand
  updateBrand(id: ID!, data: BrandUpdateInput!): Brand
  deleteBrand(id: ID!): ID
  addCategory(data: CategoryCreateInput!): Category
  updateCategory(id: ID!, data: CategoryUpdateInput!): Category
  deleteCategory(id: ID!): ID
}
