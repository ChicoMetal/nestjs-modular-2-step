# docker-compose up -d
# docker exec -it mongo-container-name mongosh
# rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]})
# rs.status
# replication:
#   replSetName: "myReplicaSet"
# net:
#   bindIp: localhost
version: '3.3'

services:
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITB_OOT_USERNAME: root
      MONGO_INITB_OOT_PASSWORD: root
    ports:
      - 27017:27017
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      # test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 --quiet
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./mongo_data:/data/db
      - "./mongo_data:/data/configdb"
volumes:
      mongo-data:
      mongo_config:
